## *********************************************************
##
## File autogenerated for the object_analytics_nodelet package
## by the dynamic_reconfigure package.
## Please do not edit.
##
## ********************************************************/

from dynamic_reconfigure.encoding import extract_params

inf = float('inf')

config_description = {'upper': 'DEFAULT', 'lower': 'groups', 'srcline': 245, 'name': 'Default', 'parent': 0, 'srcfile': '/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'cstate': 'true', 'parentname': 'Default', 'class': 'DEFAULT', 'field': 'default', 'state': True, 'parentclass': '', 'groups': [], 'parameters': [{'srcline': 290, 'description': 'Comparator to be used for segmentation', 'max': 3, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'comparator', 'edit_method': "{'enum_description': 'Comparator to be used for segmetation', 'enum': [{'srcline': 27, 'description': 'Plane Coefficient Comparator', 'srcfile': '/home/awais/catkin_ws/src/ros_object_analytics/object_analytics_nodelet/cfg/OrganizedMultiPlaneSegmentation.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'PlaneCoefficientComparator'}, {'srcline': 28, 'description': 'Euclidean Plane Coefficient Comparator', 'srcfile': '/home/awais/catkin_ws/src/ros_object_analytics/object_analytics_nodelet/cfg/OrganizedMultiPlaneSegmentation.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'EuclideanPlaneCoefficientComparator'}, {'srcline': 29, 'description': 'RGB Plane Coefficient Comparator', 'srcfile': '/home/awais/catkin_ws/src/ros_object_analytics/object_analytics_nodelet/cfg/OrganizedMultiPlaneSegmentation.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'RGBPlaneCoefficientComparator'}, {'srcline': 30, 'description': 'Edge Aware Plane Comparator', 'srcfile': '/home/awais/catkin_ws/src/ros_object_analytics/object_analytics_nodelet/cfg/OrganizedMultiPlaneSegmentation.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'EdgeAwarePlaneComparator'}]}", 'default': 0, 'level': 0, 'min': 0, 'type': 'int'}, {'srcline': 290, 'description': 'The minimum number of points that a cluster needs to contain in order to be considered valid', 'max': 10000, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'min_cluster_size', 'edit_method': '', 'default': 300, 'level': 0, 'min': 10, 'type': 'int'}, {'srcline': 290, 'description': 'The mininum number of inliers required for a plane', 'max': 10000, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'min_plane_inliers', 'edit_method': '', 'default': 1000, 'level': 0, 'min': 100, 'type': 'int'}, {'srcline': 290, 'description': 'The depth in meters change threshold for computing object borders', 'max': 0.1, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'normal_max_depth_change', 'edit_method': '', 'default': 0.02, 'level': 0, 'min': 0.001, 'type': 'double'}, {'srcline': 290, 'description': 'The tolerance in degrees for difference in normal direction between neighboring points, to be considered part of same plane', 'max': 45.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'normal_angle_threshold', 'edit_method': '', 'default': 2.0, 'level': 0, 'min': 0.01, 'type': 'double'}, {'srcline': 290, 'description': 'The tolerance in meters for difference in perpendicular distance to the plane between neighboring points, to be considered part of same plane', 'max': 0.1, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'normal_distance_threshold', 'edit_method': '', 'default': 0.02, 'level': 0, 'min': 0.001, 'type': 'double'}, {'srcline': 290, 'description': 'The factor which influences the size of the area used to smooth normals', 'max': 100.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'normal_smooth_size', 'edit_method': '', 'default': 30.0, 'level': 0, 'min': 1.0, 'type': 'double'}, {'srcline': 290, 'description': 'Max distance for two objects to be considered as separated', 'max': 0.1, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'euclidean_distance_threshold', 'edit_method': '', 'default': 0.02, 'level': 0, 'min': 0.001, 'type': 'double'}, {'srcline': 290, 'description': 'Minimum points count for a cluster to be consider as a plane', 'max': 20000, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'plane_minimum_points', 'edit_method': '', 'default': 2000, 'level': 0, 'min': 1000, 'type': 'int'}, {'srcline': 290, 'description': 'Minimum points count for a cluster to be consider as an object', 'max': 5000, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'object_minimum_points', 'edit_method': '', 'default': 200, 'level': 0, 'min': 1, 'type': 'int'}], 'type': '', 'id': 0}

min = {}
max = {}
defaults = {}
level = {}
type = {}
all_level = 0

#def extract_params(config):
#    params = []
#    params.extend(config['parameters'])
#    for group in config['groups']:
#        params.extend(extract_params(group))
#    return params

for param in extract_params(config_description):
    min[param['name']] = param['min']
    max[param['name']] = param['max']
    defaults[param['name']] = param['default']
    level[param['name']] = param['level']
    type[param['name']] = param['type']
    all_level = all_level | param['level']

OrganizedMultiPlaneSegmentation_PlaneCoefficientComparator = 0
OrganizedMultiPlaneSegmentation_EuclideanPlaneCoefficientComparator = 1
OrganizedMultiPlaneSegmentation_RGBPlaneCoefficientComparator = 2
OrganizedMultiPlaneSegmentation_EdgeAwarePlaneComparator = 3
